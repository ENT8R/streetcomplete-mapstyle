layers:

    boundaries:
        data: { source: thunderforest, layer: country-line }
        draw:
            boundary_dashes:
                order: 80
                color: global.boundary_color
                width: 1px

    # thunderforest: there is also layer state-line

    ocean:
        data: { source: thunderforest, layer: ocean }
        draw:
            polygons:
                order: 2
                color: global.water_color

        shore_lines:
            filter: { $zoom: { min: 16 } }
            draw:
                lines-coast:
                    order: 3
                    width: [[16,20px],[18,10m]] # actually visually 1/3
                    color: global.water_color
        
    water:
        data: { source: thunderforest, layer: water }
        filter: { not: { tunnel: yes }}
        draw:
            polygons:
                order: 2
                color: global.water_color

        shore_lines:
            filter: { $zoom: { min: 16 } }
            draw:
                lines-coast:
                    order: 3
                    width: [[16,20px],[18,10m]] # actually visually 1/3
                    color: global.water_color

    waterways:
        data: { source: thunderforest , layer: waterway }
        filter: { not: { tunnel: yes }}
        draw:
            lines:
                order: 3
                join: round
                cap: square

        river_lines:
            filter: { waterway: [river, canal] }
            draw:
                lines:
                    color: global.water_color
                    width: [[10, 1px], [17, 6px], [18, 12m]]

        stream_lines:
            filter: { waterway: [stream, ditch, drain], $zoom: { min: 15 }}
            draw:
                lines:
                    color: global.water_color
                    width: [[15, 1px], [17, 2px], [18, 5m]]

    buildings:
        data: { source: thunderforest, layer: building }
        # thunderforest: any 3d buildings?
        filter: { $zoom: { min: 16 } }
        draw:
            buildings-style:
                order: 100
                color: global.building_color
                extrude: function() { return feature.render_height; }
            buildings-outline-style:
                order: 101
                color: global.building_outline_color
                width: [[16, 1px], [18,2px], [19,4px]]
                extrude: function() { return feature.render_height; }

    landcover:
        data: { source: thunderforest, layer: landcover }
        draw:
            polygons:
                order: 1
        green:
            filter:
                type: [heath, grassland, grass, farmland, meadow]
            draw:
                polygons:
                    color: global.green_color
        trees:
            filter:
                type: [scrub, wood, forest, orchard, vineyard]
            draw:
                polygons:
                    order: 1
                    color: global.forest_color

    landuse:
        data: { source: thunderforest, layer: landuse }
        draw:
            polygons:
                order: 1
        town:
            filter:
                type:
                    - residential
                    - industrial
                    - railway
                    - bus_station
                    - religious
                    - commercial
                    - retail
                    - garages
                    - farmyard
                    - construction
                    # all the below are not really landuses but sometimes drawn outside of residential/commercial landuses
                    - university
                    - school
                    - college
                    - kindergarten
                    - library
                    - hospital
                    - nursing_home
                    - social_facility
                    - clinic
                    - parking
                    - conference_centre
                    - theme_park
            draw:
                polygons:
                    color: global.town_color
        green:
            filter:
                type:
                    - greenfield
                    - village_green
                    - dog_park
                    - park
                    - graveyard
                    - cemetery
                    - golf_course
                    - miniature_golf
                    - sports_centre
                    - recreation_ground
                    - pitch
                    - track
                    - playground
                    - garden
                    - allotments
                    - petting_zoo
                    - zoo
                    - wildlife_park
                    - maze
                    - resort
            draw:
                polygons:
                    color: global.green_color

    poi-areas:
        data: { source: thunderforest, layer: poi-area }
        draw:
            polygons:
                order: 1
        town:
            filter:
                feature:
                    - hospital
            draw:
                polygons:
                    color: global.town_color
        green:
            filter:
                feature:
                    - zoo
                    - camp_site
                    - caravan_site
                    - picnic_site
            draw:
                polygons:
                    color: global.green_color

    barriers:
        data: { source: thunderforest , layer: barrier }
        city_walls:
            filter: { feature: [city_wall, dam] }
            draw:
                buildings-outline-style:
                    order: 100
                    color: global.building_outline_color
                    width: [[12, 4px], [18, 8m]]
        walls:
            filter: { feature: [wall, retaining_wall, fence] }
            draw:
                buildings-outline-style:
                    order: 100
                    color: global.building_outline_color
                    width: [[15, 1px], [18, 2m]]
        hedge:
            filter: { feature: [hedge, hedge_bank] }
            draw:
                buildings-outline-style:
                    order: 100
                    color: global.forest_color
                    width: [[15, 1px], [18, 2m]]

    pedestrian-areas:
        data: { source: thunderforest , layer: road-area }
        squares:
            filter: { highway: [pedestrian] , $zoom: { min: 17 } }
            draw:
                lines:
                    color: global.square_outline_color
                    width: function () { return 1/4 * Math.log($zoom); }
                    order: 20
                polygons:
                    color: global.square_color
                    order: 21


    # thunderforest: there is also the layer elevation (w/ height=), hillshade (w/ level= 110..180..230)

styles:
    boundary_dashes:
        base: lines
        dash: [1, 2]
    buildings-style:
        base: polygons
        blend: opaque
    buildings-outline-style:
        base: lines
        blend: inlay
    lines-coast:
        base: lines
        texcoords: true
        blend: inlay
        shaders:
            uniforms:
                u_waves: 1.5
                u_speed: 0.08
                u_color: [1.,1.,1.0,0.4]
            blocks:
                color: |
                    float x = (v_texcoord.x - 0.495) * 2.;
                    if(x > 0.0) {
                        float opacity = 1.-x;
                        float waves = fract(u_waves*(1.-x)-u_time*u_speed);
                        color = mix(color, u_color, opacity * waves * u_color.a);
                    } else {
                        color.a = 0.0;
                    }
